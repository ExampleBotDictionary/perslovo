'use strict';

const debug = require('debug')('parsit:HtmlParser');
const htmlparser2 = require('htmlparser2');
const PropSet = require('./PropSet').PropSet;

function HtmlParser() {
}

HtmlParser.prototype.parse = function (htmlText) {
  const propSet = new PropSet();
  const parser = new htmlparser2.Parser({
    onopentag: (name, attribs) => {
      if (name === 'meta') {
        debug('Propery found "%s"="%s"', attribs.property, attribs.content);
        propSet.set(attribs.property, attribs.content);
        debug('Propery found "%s"="%s"', attribs.property, attribs.content);
      } else if (name === 'body') {
        debug('stop parsing at body');
        parser.parseComplete();
      }
    }
  }, {decodeEntities: false});
  parser.write(htmlText);
  parser.end();
  return propSet;
};

exports.HtmlParser = HtmlParser;
